package com.vaniondabeat;

import java.io.File;
import java.lang.reflect.Array;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.sql.SQLOutput;
import java.util.*;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;


public class Main {
    static class Car {


        String model;
        Engine engine = new Engine();
        Cargo cargo = new Cargo();
        Tires tires = new Tires();

        public Car(String model, Engine engine, Cargo cargo, Tires tires) {
            this.model = model;
            this.engine = engine;
            this.cargo = cargo;
            this.tires = tires;
        }

        public String getModel() {
            return model;
        }

        public void setModel(String model) {
            this.model = model;
        }

        public Engine getEngine() {
            return engine;
        }

        public void setEngine(Engine engine) {
            this.engine = engine;
        }

        public Cargo getCargo() {
            return cargo;
        }

        public void setCargo(Cargo cargo) {
            this.cargo = cargo;
        }

        public Tires getTires() {
            return tires;
        }

        public void setTires(Tires tires) {
            this.tires = tires;
        }
    }

    static class Engine {
        int engineSpeed;
        int enginePower;

        public Engine() {

        }

        public Engine(int engineSpeed, int enginePower) {
            this.engineSpeed = engineSpeed;
            this.enginePower = enginePower;
        }

        public int getEngineSpeed() {
            return engineSpeed;
        }

        public void setEngineSpeed(int engineSpeed) {
            this.engineSpeed = engineSpeed;
        }

        public int getEnginePower() {
            return enginePower;
        }

        public void setEnginePower(int enginePower) {
            this.enginePower = enginePower;
        }
    }

    static class Cargo {
        int cargoWeight;
        String cargoType;

        public Cargo() {


        }

        public Cargo(int cargoWeight, String cargoType) {
            this.cargoWeight = cargoWeight;
            this.cargoType = cargoType;
        }

        public int getCargoWeight() {
            return cargoWeight;
        }

        public void setCargoWeight(int cargoWeight) {
            this.cargoWeight = cargoWeight;
        }

        public String getCargoType() {
            return cargoType;
        }

        public void setCargoType(String cargoType) {
            this.cargoType = cargoType;
        }
    }

    static class Tires {

        public Tires() {

        }

        Double tire1Pressure;
        Double tire2Pressure;
        Double tire3Pressure;
        Double tire4Pressure;

        int tire1Age;
        int tire2Age;
        int tire3Age;
        int tire4Age;

        public Tires(Double tire1Pressure, Double tire2Pressure, Double tire3Pressure, Double tire4Pressure, int tire1Age, int tire2Age, int tire3Age, int tire4Age) {
            this.tire1Pressure = tire1Pressure;
            this.tire2Pressure = tire2Pressure;
            this.tire3Pressure = tire3Pressure;
            this.tire4Pressure = tire4Pressure;
            this.tire1Age = tire1Age;
            this.tire2Age = tire2Age;
            this.tire3Age = tire3Age;
            this.tire4Age = tire4Age;
        }

        public Double getTire1Pressure() {
            return tire1Pressure;
        }

        public Double getTire2Pressure() {
            return tire2Pressure;
        }

        public Double getTire3Pressure() {
            return tire3Pressure;
        }

        public Double getTire4Pressure() {
            return tire4Pressure;
        }

        public int getTire1Age() {
            return tire1Age;
        }

        public int getTire2Age() {
            return tire2Age;
        }

        public int getTire3Age() {
            return tire3Age;
        }

        public int getTire4Age() {
            return tire4Age;
        }
    }


    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int n = Integer.parseInt(scanner.nextLine());

        List<Car> myCars = new LinkedList<>();

        for (int i = 0; i < n; i++) {
            //<Model> <EngineSpeed> <EnginePower> <CargoWeight> <CargoType>
            // <Tire1Pressure> <Tire1Age> <Tire2Pressure> <Tire2Age>
            // <Tire3Pressure> <Tire3Age> <Tire4Pressure> <Tire4Age>
            String[] tokens = scanner.nextLine().split(" ");

            String model = tokens[0];
            int engineSpeed = Integer.parseInt(tokens[1]);
            int enginePower = Integer.parseInt(tokens[2]);
            int cargoWeight = Integer.parseInt(tokens[3]);
            String cargoType = tokens[4];
            Double tire1Pressure = Double.parseDouble(tokens[5]);
            int tire1Age = Integer.parseInt(tokens[6]);
            Double tire2Pressure = Double.parseDouble(tokens[7]);
            int tire2Age = Integer.parseInt(tokens[8]);
            Double tire3Pressure = Double.parseDouble(tokens[9]);
            int tire3Age = Integer.parseInt(tokens[10]);
            Double tire4Pressure = Double.parseDouble(tokens[11]);
            int tire4Age = Integer.parseInt(tokens[12]);

            Car citroen = new Car(model, new Engine(engineSpeed, enginePower), new Cargo(cargoWeight, cargoType), new Tires(tire1Pressure, tire2Pressure, tire3Pressure, tire4Pressure, tire1Age, tire2Age, tire3Age, tire4Age));
            myCars.add(citroen);

        }
        String singleCommand = scanner.nextLine();


        //<Model> <EngineSpeed> <EnginePower> <CargoWeight> <CargoType>
        // <Tire1Pressure> <Tire1Age> <Tire2Pressure> <Tire2Age>
        // <Tire3Pressure> <Tire3Age> <Tire4Pressure> <Tire4Age>
        for (Car myCar : myCars) {
            if (singleCommand.equals("fragile") && myCar.getCargo().cargoType.equals("fragile") && myCar.getTires().tire1Pressure < 1) {
                System.out.println(myCar.model);

            }
            if (singleCommand.equals("flamable") && myCar.getEngine().enginePower > 250 && myCar.getCargo().cargoType.equals("flamable")) {
                System.out.println(myCar.model);
            }
//            System.out.printf(
//                    "%nModel: %s %n" +
//                            "EngineSpeed: %d%n" +
//                            "EnginePower: %d%n" +
//                            "CargoWeight: %d%n" +
//                            "CargoType: %s%n" +
//                            "Tire One: %f", myCar.getModel(), myCar.getEngine().engineSpeed,
//                    myCar.getEngine().enginePower, myCar.getCargo().getCargoWeight(),
//                    myCar.getCargo().cargoType, myCar.getTires().tire1Pressure
//
//
//            );
        }


    }


}
