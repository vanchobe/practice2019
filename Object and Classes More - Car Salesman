package com.vaniondabeat;

import java.io.File;
import java.lang.reflect.Array;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.sql.SQLOutput;
import java.util.*;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;


public class Main {
    static class Car {
        String model;
        Engine engine;
        String weight;
        String color;

        public Car(String model, Engine engine, String weight, String color) {
            this.model = model;
            this.engine = engine;
            this.weight = weight;
            this.color = color;
        }

        public Car(String model, Engine engine) {
            this(model, engine, "n/a", "n/a");
            this.model = model;
            this.engine = engine;

        }

        public String getModel() {
            return model;
        }

        public Engine getEngine() {
            return engine;
        }

        public String getWeight() {
            return weight;
        }

        public String getColor() {
            return color;
        }

        @Override
        public String toString() {
            return String.format("%s:%n" +
                    "  %s:%n" +
                    "    Power: %s%n" +
                    "    Displacement: %s%n" +
                    "    Efficiency: %s%n" +
                    "  Weight: %s%n" +
                    "  Color: %s%n", this.getModel(), this.getEngine().model, this.getEngine().power, this.getEngine().displacement, this.getEngine().efficiency, this.getWeight(), this.getColor());
        }
    }

    static class Engine {
        String model;
        int power;
        String displacement;
        String efficiency;

        public Engine(String model, int power, String displacement, String efficiency) {
            this.model = model;
            this.power = power;
            this.displacement = displacement;
            this.efficiency = efficiency;
        }

        public Engine(String model, int power) {
            this(model, power, "n/a", "n/a");
            this.model = model;
            this.power = power;

        }
    }


    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int n = Integer.parseInt(scanner.nextLine());

        // <Model> <Power> <Displacement> <Efficiency>

        List<Engine> engines = new ArrayList<>();

        List<Car> car = new ArrayList<>();

        for (int i = 0; i < n; i++) {
            String[] tokens = scanner.nextLine().split(" ");
            // TODO implement here logic
            String model = tokens[0];
            int power = Integer.parseInt(tokens[1]);

            Engine myEngine = null;

            if (tokens.length == 4) {
                String displacement = tokens[2];
                String efficiency = tokens[3];
                myEngine = new Engine(model,power,displacement,efficiency);


            } else if (tokens.length == 3) {
                String displacement = tokens[2];
                if (isNum(tokens[2])){
                    myEngine = new Engine(model,power,displacement,"n/a");
                }else{
                    myEngine = new Engine(model,power,"n/a",displacement);
                }


            } else {
                myEngine = new Engine(model, power, "n/a", "n/a");

            }
            engines.add(myEngine);

        }
        int m = Integer.parseInt(scanner.nextLine());
        for (int i = 0; i < m; i++) {

            // <Model> <Engine> <Weight> <Color>
            Car myCar = null;
            Engine myEngine = null;


            String[] tokens = scanner.nextLine().split(" ");
            // TODO implement here logic
            String model = tokens[0];
            String engine = tokens[1];
            for (Engine engine1 : engines) {
                if (engine1.model.equals(engine)) {
                    myEngine = engine1;
                    break;

                }
            }

            if (tokens.length == 4) {
                String weight = tokens[2];
                String color = tokens[3];

                myCar = new Car(model, myEngine, weight, color);
            } else if (tokens.length == 3) {


                if (isNum(tokens[2])){
                    String weight = tokens[2];
                    myCar=new Car(model,myEngine,weight,"n/a");
                }else{
                    String color = tokens[2];
                    myCar=new Car(model,myEngine,"n/a",color);
                }

            } else {
                myCar = new Car(model, myEngine, "n/a", "n/a");
            }
            car.add(myCar);

        }
        for (Car car1 : car) {
            System.out.println(car1);
        }

    }

    private static boolean isNum(String token) {
        try {
            Integer.parseInt(token);
            return true;
        } catch (NumberFormatException ex) {
            return false;
        }
    }


}
